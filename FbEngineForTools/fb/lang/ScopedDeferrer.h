#pragma once

/**
 * Use like this:
 *
 * 
	SomeClass::someFunc()
	{
		uint32_t foo = 32;
		string::TempString bar("BBABAAAAR");
		FB_SCOPED_DEFERRER(ScopedPrinter, uint32_t, foo, const string::TempString&, bar,
			if (foo > 31)
				FB_PRINTF("RESULT::::: %s: %d\n", bar.getPointer(), foo);
		);
		ScopedPrinter printer(foo, bar);
		// Rest of code
		// ...
		// Provided code will be executed when printer drops out of scope
	}
 * 
 */


#define FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_IMPL(p_param_type, p_param_name) p_param_type p_param_name

#define FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_4(p_args) FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_IMPL p_args
#define FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_3(p_args) FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_4(p_args)
#define FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_2(p_args) FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_3(p_args)
#define FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_1(p_args) FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_2(p_args)
#define FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL(...) FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL_1((__VA_ARGS__))


#define FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_IMPL(p_param_type, p_param_name) p_param_name(p_param_name)

#define FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_4(p_args) FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_IMPL p_args
#define FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_3(p_args) FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_4(p_args)
#define FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_2(p_args) FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_3(p_args)
#define FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_1(p_args) FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_2(p_args)
#define FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST(...) FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST_1((__VA_ARGS__))

#define FB_SCOPED_DEFERRER_VARIABLE_DECL_IMPL(p_param_type, p_param_name) p_param_type p_param_name;

#define FB_SCOPED_DEFERRER_VARIABLE_DECL_4(p_args) FB_SCOPED_DEFERRER_VARIABLE_DECL_IMPL p_args
#define FB_SCOPED_DEFERRER_VARIABLE_DECL_3(p_args) FB_SCOPED_DEFERRER_VARIABLE_DECL_4(p_args)
#define FB_SCOPED_DEFERRER_VARIABLE_DECL_2(p_args) FB_SCOPED_DEFERRER_VARIABLE_DECL_3(p_args)
#define FB_SCOPED_DEFERRER_VARIABLE_DECL_1(p_args) FB_SCOPED_DEFERRER_VARIABLE_DECL_2(p_args)
#define FB_SCOPED_DEFERRER_VARIABLE_DECL(...) FB_SCOPED_DEFERRER_VARIABLE_DECL_1((__VA_ARGS__))

#define FB_SCOPED_DEFERRER_GET_NUM_ARGS_IMPL(p_args) FB_PP_NARG p_args
#define FB_SCOPED_DEFERRER_GET_NUM_ARGS_4(p_args) FB_SCOPED_DEFERRER_GET_NUM_ARGS_IMPL(p_args)
#define FB_SCOPED_DEFERRER_GET_NUM_ARGS_3(p_args) FB_SCOPED_DEFERRER_GET_NUM_ARGS_4(p_args)
#define FB_SCOPED_DEFERRER_GET_NUM_ARGS_2(p_args) FB_SCOPED_DEFERRER_GET_NUM_ARGS_3(p_args)
#define FB_SCOPED_DEFERRER_GET_NUM_ARGS_1(p_args) FB_SCOPED_DEFERRER_GET_NUM_ARGS_2(p_args)
#define FB_SCOPED_DEFERRER_GET_NUM_ARGS(...) FB_SCOPED_DEFERRER_GET_NUM_ARGS_1((__VA_ARGS__))

#define FB_SCOPED_DEFERRER_GET_BODY_IMPL(...) FB_PP_CONCAT(FB_PP_GET_ARG_, FB_SCOPED_DEFERRER_GET_NUM_ARGS(__VA_ARGS__)) ((__VA_ARGS__))
#define FB_SCOPED_DEFERRER_GET_BODY_4(...) FB_SCOPED_DEFERRER_GET_BODY_IMPL(__VA_ARGS__)
#define FB_SCOPED_DEFERRER_GET_BODY_3(...) FB_SCOPED_DEFERRER_GET_BODY_4(__VA_ARGS__)
#define FB_SCOPED_DEFERRER_GET_BODY_2(...) FB_SCOPED_DEFERRER_GET_BODY_3(__VA_ARGS__)
#define FB_SCOPED_DEFERRER_GET_BODY_1(...) FB_SCOPED_DEFERRER_GET_BODY_2(__VA_ARGS__)
#define FB_SCOPED_DEFERRER_GET_BODY(...) FB_SCOPED_DEFERRER_GET_BODY_1((__VA_ARGS__))

#define FB_SCOPED_DEFERRER(p_name, ...) \
	struct p_name \
	{ \
		p_name(FB_PP_FOREACH_PAIR_IGNORE_LAST(FB_SCOPED_DEFERRER_CONSTRUCTOR_DECL, __VA_ARGS__)) \
			: FB_PP_FOREACH_PAIR_IGNORE_LAST(FB_SCOPED_DEFERRER_CONSTRUCTOR_INIT_LIST, __VA_ARGS__) \
		{ } \
		~p_name() \
		{ \
			FB_SCOPED_DEFERRER_GET_BODY_IMPL(__VA_ARGS__) \
		} \
		FB_PP_STRIP_COMMAS(FB_PP_FOREACH_PAIR_IGNORE_LAST(FB_SCOPED_DEFERRER_VARIABLE_DECL, __VA_ARGS__)) \
	}

#define FB_SCOPED_DEFERRER0(p_name, p_body) \
	struct p_name \
	{ \
		~p_name() \
		{ \
			p_body \
		} \
	}

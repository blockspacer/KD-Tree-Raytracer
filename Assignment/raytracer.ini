# Simple KD-Tree Raytracer config file
# (c) JLarja 2009, jlarja@iki.fi, etc. etc.
#
# Lines beginning with # are comments. You cannot start a comment in the 
# middle of the line.
#
# Lines beginning with [ and ending to ] are section starters. Parameters are 
# written as parameter_name = parameter_definition , for example: 
#
# light = point 10.4 5.5 3.9 1.0 0.5 0.5
#
# When file is read, beginning and end of each line is stripped of white 
# space. So if you wish, you can indent and such as much as you like. Also, 
# many of the lines containing parameters are not wholly read, so you may get 
# away with extra stuf after parameter definitions.
#
# If same parameter is defined many times, last definition will stand. Note 
# that some parameters, like light, are meant to be defined multiple times. For 
# them, each definition counts, of course.
#

[general]
#model file name = happy_recon/happy_vrip_res4.ply
 model file name = dragon_recon/dragon_vrip_res4.ply
#model file name = happy_recon/happy_vrip.ply
#model file name = dragon_recon/dragon_vrip.ply
output file name = ../image.tga
backface culling = true
frontface culling = false
shadows = true
useKDTree = true
# 0 means Raytracer should guess (= read it from environment variable)
hardware threads = 0
# -1 is BELOW_NORMAL in Windows speak. Other interesting values are -2 IDLE 
# and 0 NORMAL. I really wouldn't recommend any positive values (1 
# ABOVE_NORMAL, 2 HIGH, 3 REALTIME) or even 0 (THREAD_PRIORITY_NORMAL), at 
# least on single and dual-core processors.
thread priority = -1


# If automatic camera is used, only relative position and upvector matters. 
# Camera will automatically aim to the center of the model's bounding box and 
# back of and adjust the viewport so that the whole model is seen.

[camera]
automatic camera = true
camera relative position = -4.0 -0.2 10.0
camera position = 0.2 0.15 0.0
# Camera direction and up vector will be automatically normalized
camera direction = -0.2 0.0 0.0
camera up vector = 0.0 1.0 0.0

[viewport]
# Image width and height in pixels
image width = 720
image height = 1080
# Upper left, upper right, lower right, lower left
#                       X   Y     Z   X   Y      Z   X    Y      Z   X    Y     Z
viewport coordinates = 0.1 0.225 0.1 0.1 0.225 -0.1 0.1 -0.075 -0.1 0.1 -0.075 0.1

# Light can be either ambient, diffuse or point light. There's no limit to 
# number of lights, although I fail to see use for many ambient lights. First 
# three values are light coordinates, last three the color. For diffuse light, 
# coordinates specify the direction of the light.

[lights]
light = ambient 0.0 0.0 0.0 0.2 0.1 0.1 
light = point -100.0 -10.0 0.0 0.6 0.4 0.0
light = point 100.0 0.0 110.0 0.8 0.3 0.0
light = diffuse 0.0 -1.0 0.0 0.5 0.25 0.0
